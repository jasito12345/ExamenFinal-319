22/12/12 02:47:52 WARN Utils: Your hostname, alvaro-VirtualBox resolves to a loopback address: 127.0.1.1; using 192.168.100.37 instead (on interface enp0s3)
22/12/12 02:47:52 WARN Utils: Set SPARK_LOCAL_IP if you need to bind to another address
Setting default log level to "WARN".
To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).
22/12/12 02:48:15 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable
Spark context Web UI available at http://192.168.100.37:4040
Spark context available as 'sc' (master = local[*], app id = local-1670827705071).
Spark session available as 'spark'.
Welcome to
      __              __
     / _/_  _ __/ /_
    \ \/ _ \/ _ `/ _/  '_/
   /_/ ._/\,// //\\   version 3.3.1
      /_/
         
Using Scala version 2.12.15 (OpenJDK 64-Bit Server VM, Java 11.0.17)
Type in expressions to have them evaluated.
Type :help for more information.

scala> import org.apache.spark.streaming.StreamingContext
import org.apache.spark.streaming.StreamingContext

scala> import org.apache.spark.streaming.dstream.ReceiverInputDStream
import org.apache.spark.streaming.dstream.ReceiverInputDStream

scala> import org.apache.spark.streaming.Seconds
import org.apache.spark.streaming.Seconds

scala> val streamingContext: StreamingContext = new StreamingContext(sparkContext, Seconds(20))
<console>:25: error: not found: value sparkContext
       val streamingContext: StreamingContext = new StreamingContext(sparkContext, Seconds(20))
                                                                     ^

scala> val streamingContext: StreamingContext = new StreamingContext(sc, Seconds(20))
streamingContext: org.apache.spark.streaming.StreamingContext = org.apache.spark.streaming.StreamingContext@6e46f5c1

scala> val lines: ReceiverInputDStream[String] = streamingContext.socketTextStream("localhost", 9999)
lines: org.apache.spark.streaming.dstream.ReceiverInputDStream[String] = org.apache.spark.streaming.dstream.SocketInputDStream@74f47eab

scala> lines.start()

scala> lines.stop()

scala>